{"version":3,"sources":["index.js"],"names":["ReactDOM","render","React","useState","username","setUsername","password","setPassword","error","setError","city","setCity","temp","setTemp","pressure","setPressure","data","setData","fetchData","a","axios","get","catch","e","response","status","style","textAlign","display","flexDirection","alignItems","type","placeholder","value","onChange","target","onSubmit","preventDefault","id","name","onClick","for","clouds","humidity","temperature","document","getElementById"],"mappings":"qOAuIAA,IAASC,OAAO,mBAnIN,WAAM,MAEkBC,IAAMC,SAAS,SAFjC,mBAEPC,EAFO,KAEGC,EAFH,OAGkBH,IAAMC,SAAS,UAHjC,mBAGPG,EAHO,KAGGC,EAHH,OAIYL,IAAMC,SAAS,IAJ3B,mBAIPK,EAJO,KAIAC,EAJA,OAKUP,IAAMC,SAAS,IALzB,mBAKPO,EALO,KAKDC,EALC,OAMUT,IAAMC,SAAS,IANzB,mBAMPS,EANO,KAMDC,EANC,OAOkBX,IAAMC,SAAS,IAPjC,mBAOPW,EAPO,KAOGC,EAPH,OASUb,IAAMC,SAAS,IATzB,mBASPa,EATO,KASDC,EATC,KAWRC,EAAS,uCAAG,8BAAAC,EAAA,4DACD,CAAEf,WAAUE,YACnBE,EAAQ,GAFA,SAIKY,IAAMC,IAAN,yCAA4CX,EAA5C,kBAA0DE,EAA1D,kBAAwEE,IAC5EQ,OAAM,SAACC,GAAD,OAAOf,EAAOe,EAAEC,SAASC,UALhC,OAIRT,EAJQ,OAOA,KAATR,EACCC,EAAS,mBACO,KAATD,EACPC,EAAS,gBACO,KAATD,EACPC,EAAS,uBAEbQ,EAAQD,EAAKA,MAdD,2CAAH,qDAmDb,OACI,yBAAKU,MAAO,CAACC,UAAW,SAAUC,QAAS,OAAQC,cAAe,SAAUC,WAAY,WACtF,2BAAOC,KAAK,OAAOC,YAAY,WAAWC,MAAO7B,EAAU8B,SAAU,SAACX,GAAD,OAAMlB,EAAYkB,EAAEY,OAAOF,UAChG,2BAAOF,KAAK,OAAOC,YAAY,WAAWC,MAAO3B,EAAU4B,SAAU,SAACX,GAAD,OAAMhB,EAAYgB,EAAEY,OAAOF,UAC/FzB,EACD,6BAEA,0BACE4B,SAAU,SAAAb,GACNA,EAAEc,iBACF5B,EAAS,IACTS,MAIF,2BAAOa,KAAK,OAAOC,YAAY,cAAcC,MAAOvB,EAAMwB,SAAU,SAACX,GAAD,OAAMZ,EAAQY,EAAEY,OAAOF,UAC7F,6BACE,2BAAOF,KAAK,QAAQO,GAAG,SAASC,KAAK,OAAON,MAAM,IAAIO,QAAS,SAACjB,GAAD,OAAMV,EAAQU,EAAEY,OAAOF,UACtF,2BAAOQ,IAAI,UAAX,UACA,2BAAOV,KAAK,QAAQO,GAAG,UAAUC,KAAK,OAAON,MAAM,IAAIO,QAAS,SAACjB,GAAD,OAAMV,EAAQU,EAAEY,OAAOF,UACvF,2BAAOQ,IAAI,WAAX,WACA,2BAAOV,KAAK,QAAQO,GAAG,cAAcC,KAAK,OAAON,MAAM,IAAIO,QAAS,SAACjB,GAAD,OAAMV,EAAQU,EAAEY,OAAOF,UAC3F,2BAAOQ,IAAI,eAAX,cACA,6BACA,2BAAOV,KAAK,QAAQO,GAAG,UAAUC,KAAK,WAAWN,MAAM,SAASO,QAAS,SAACjB,GAAD,OAAMR,EAAYQ,EAAEY,OAAOF,UACpG,2BAAOQ,IAAI,WAAX,WACA,2BAAOV,KAAK,QAAQO,GAAG,OAAOC,KAAK,WAAWN,MAAM,OAAOO,QAAS,SAACjB,GAAD,OAAMR,EAAYQ,EAAEY,OAAOF,UAC/F,2BAAOQ,IAAI,QAAX,QACA,2BAAOV,KAAK,QAAQO,GAAG,MAAMC,KAAK,WAAWN,MAAM,MAAMO,QAAS,SAACjB,GAAD,OAAMR,EAAYQ,EAAEY,OAAOF,UAC7F,2BAAOQ,IAAI,OAAX,OACA,2BAAOV,KAAK,QAAQO,GAAG,eAAeC,KAAK,WAAWN,MAAM,MAAMO,QAAS,SAACjB,GAAD,OAAMR,EAAYQ,EAAEY,OAAOF,UACtG,2BAAOQ,IAAI,gBAAX,eACA,2BAAOV,KAAK,QAAQO,GAAG,WAAWC,KAAK,WAAWN,MAAM,UAAUO,QAAS,SAACjB,GAAD,OAAMR,EAAYQ,EAAEY,OAAOF,UACtG,2BAAOQ,IAAI,YAAX,WACA,6BACA,4BAAQV,KAAK,UAAb,WAGF,6BAEF,+BACE,+BACI,qCACerB,GAEf,4BACI,sCACA,wCACA,wCACA,6CAIR,+BACI,4BACI,4BAAKM,EAAK0B,QACV,4BAAK1B,EAAK2B,UACV,4BAAK3B,EAAKF,UACV,4BAAKE,EAAK4B,mBAWd,MAASC,SAASC,eAAe,W","file":"static/js/main.3dd25218.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios'\n\nlet App = () => {\n    // admin: secret\n    let [username, setUsername] = React.useState(\"admin\")\n    let [password, setPassword] = React.useState('secret')\n    let [error, setError] = React.useState('')\n    let [city, setCity] = React.useState('')\n    let [temp, setTemp] = React.useState('')\n    let [pressure, setPressure] = React.useState('')\n\n    let [data, setData] = React.useState({})\n\n    let fetchData = async () => {\n        let auth = { username, password }\n        let error = ''\n        \n        let data = await axios.get(`http://localhost:8080/forecast/${city}?tunit=${temp}&punit=${pressure}`)\n                    .catch((e) => error= e.response.status)\n                \n        if(error == 401) {\n            setError('Bad Credentials')\n        } else if (error == 400) {\n            setError('Enter a City')\n        } else if (error == 404) {\n            setError('City does not exist')\n        } else {\n        setData(data.data)\n        }\n    }\n\n/*\n\n    let getAuth = async () => {\n         let session_url = `http://localhost:8080/`;\n        let auth = { username, password }\n// await axios.post(session_url, {}, {\n//   auth\n// }).then(function(response) {\n//   console.log('Authenticated');\n// }).catch(function(error) {\n//     console.log(error)\n//   console.log('Error on Authentication');\n// });\n\n\naxios.post(session_url, {\n    withCredentials: true,\n    headers: {\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\",\n    }\n  },{\n    auth}).then(function(response) {\n    console.log('Authenticated');\n  }).catch(function(error) {\n    console.log('Error on Authentication');\n  });\n\n\n    }\n\n    */\n\n    return (\n        <div style={{textAlign: 'center', display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n          <input type='text' placeholder='username' value={username} onChange={(e)=> setUsername(e.target.value)}/>\n          <input type='text' placeholder='password' value={password} onChange={(e)=> setPassword(e.target.value)}/>\n          {error}\n          <hr />\n          {/*<button type='text' onClick={e => getAuth()}>AUTH</button>*/}\n          <form \n            onSubmit={e => {\n                e.preventDefault()\n                setError('')\n                fetchData()\n            }}\n          \n          >\n              <input type='text' placeholder='Search city' value={city} onChange={(e)=> setCity(e.target.value)}/>\n            <br/>\n              <input type=\"radio\" id=\"Kelvin\" name=\"temp\" value=\"K\" onClick={(e)=> setTemp(e.target.value)}/>\n              <label for=\"Kelvin\">Kelvin</label>\n              <input type=\"radio\" id=\"Celsius\" name=\"temp\" value=\"C\" onClick={(e)=> setTemp(e.target.value)}/>\n              <label for=\"Celsius\">Celsius</label>\n              <input type=\"radio\" id=\"Fahrenheit \" name=\"temp\" value=\"F\" onClick={(e)=> setTemp(e.target.value)}/>\n              <label for=\"Fahrenheit \">Fahrenheit</label>\n              <br/>\n              <input type=\"radio\" id=\"pascal \" name=\"pressure\" value=\"pascal\" onClick={(e)=> setPressure(e.target.value)}/>\n              <label for=\"pascal \">hPascal</label>\n              <input type=\"radio\" id=\"Bars\" name=\"pressure\" value=\"bars\" onClick={(e)=> setPressure(e.target.value)}/>\n              <label for=\"Bars\">Bars</label>\n              <input type=\"radio\" id=\"Tor\" name=\"pressure\" value=\"tor\" onClick={(e)=> setPressure(e.target.value)}/>\n              <label for=\"Tor\">Tor</label>\n              <input type=\"radio\" id=\"Atmospheres \" name=\"pressure\" value=\"atm\" onClick={(e)=> setPressure(e.target.value)}/>\n              <label for=\"Atmospheres \">Atmospheres</label>\n              <input type=\"radio\" id=\"Mercury \" name=\"pressure\" value=\"mercury\" onClick={(e)=> setPressure(e.target.value)}/>\n              <label for=\"Mercury \">Mercury</label>\n              <br/>\n              <button type='submit'>Search</button>\n          </form>\n\n            <hr/>\n\n          <table>\n            <thead>\n                <tr>\n                        Name: {city}\n                </tr>\n                <tr>\n                    <th>Clouds</th>\n                    <th>Humidity</th>\n                    <th>Pressure</th>\n                    <th>Temperature</th>\n                </tr>\n            </thead>\n\n            <tbody>\n                <tr>\n                    <td>{data.clouds}</td>\n                    <td>{data.humidity}</td>\n                    <td>{data.pressure}</td>\n                    <td>{data.temperature}</td>\n                </tr>\n            </tbody>\n          </table>\n\n          \n\n        </div>\n    )\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}